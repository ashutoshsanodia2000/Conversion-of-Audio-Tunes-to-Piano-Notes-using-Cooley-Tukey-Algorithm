function x = fft_radix4(x,...   % ??????-?????? ??????, complex, re
                        flag)   % 1 - ????????? ??, 0 - ???
% ?????????? ??? ?? ???????????? ?????? "?" ???? - ?????, "radix  = 4",
% ?????? ?????????? ? ????????? ???????
% ???????????: ??????? 5 ????? ????? ?? ??? ?????? ??????????? ?.?.

if nargin < 2
    flag = false;
end

temp = length(x);
p = 1;                            
while 4^p < temp 
      p = p + 1;
end
x = [x zeros(1,(4^p)-length(x))]; 
N = length(x);
M = N/4;
for lev = 1 : p 
    for k = 0 : N/(4^(lev-1)) : N - 1 
         for n = 0 : (M - 1)  % ?????????????? ?????? ????????
              a=x(n+1+k) +  x(n+(M)+1+k) + x(n+(2*M)+1+k) +   x(n+(3*M)+1+k);
              b=x(n+1+k) -1i*x(n+(M)+1+k) - x(n+(2*M)+1+k) + 1i*x(n+(3*M)+1+k);
              c=x(n+1+k) -  x(n+(M)+1+k) + x(n+(2*M)+1+k) - x(n+(3*M)+1+k);
              d=x(n+1+k) +1i*x(n+(M)+1+k) - x(n+(2*M)+1+k) - 1i*x(n+(3*M)+1+k);
              
              x(n+1+k)       = a*exp(-1i*((2*pi)/N)* (0) *(4^(lev-1)));
              x(M+n+1+k)     = b*exp(-1i*((2*pi)/N)*(n*1)*(4^(lev-1)));
              x((2*M)+n+1+k) = c*exp(-1i*((2*pi)/N)*(n*2)*(4^(lev-1)));
              x((3*M)+n+1+k) = d*exp(-1i*((2*pi)/N)*(n*3)*(4^(lev-1)));
         end     
    end
M = M/4;
end
x = bitrevorder(x);
x = [x(N/2:end) x(1:N/2-1)];
if flag % ???????????????? ????????? ???????? ???????
    for n = 1 : N
        for k = 1 :  N
            x(n) = x(n)*exp(-1i*2*pi*n*k/(N^2));
        end
    end
end